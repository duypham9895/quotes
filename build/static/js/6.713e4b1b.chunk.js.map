{"version":3,"sources":["components/UI/Card.module.css","components/quotes/QuoteForm.module.css","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.js"],"names":["module","exports","Card","props","className","classes","card","children","QuoteForm","onAddQuote","isLoading","authorInputRef","useRef","textInputRef","form","onFocus","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","author","text","created_at","Date","toISOString","LoadingSpinner","loading","control","htmlFor","type","id","ref","rows","actions","onClick","NewQuote","navigate","useNavigate","useHttp","addQuote","sendRequest","status","useEffect","quote"],"mappings":"uHACAA,EAAOC,QAAU,CAAC,KAAO,mB,sBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2BAA2B,QAAU,2BAA2B,QAAU,2B,qFCKtHC,EAJF,SAACC,GACZ,OAAO,qBAAKC,UAAWC,IAAQC,KAAxB,SAA+BH,EAAMI,UAC7C,E,0BCwDcC,EAtDG,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,UAEzBC,EAAiBC,mBACjBC,EAAeD,mBAuBrB,OACE,mCACE,cAAC,EAAD,UACE,uBACER,UAAWC,IAAQS,KACnBC,QAbiB,WAExB,EAYOC,SA3BR,SAA2BC,GACzBA,EAAMC,iBAEN,IAAMC,EAAgBR,EAAeS,QAAQC,MACvCC,EAAcT,EAAaO,QAAQC,MAEzCZ,EAAW,CACTc,OAAQJ,EACRK,KAAMF,EACNG,YAAY,IAAIC,MAAOC,eAE1B,EAaK,UAKE,cAACC,EAAA,EAAD,CAAgBlB,UAAWA,EAAWN,UAAWC,IAAQwB,UACzD,sBAAKzB,UAAWC,IAAQyB,QAAxB,UACE,uBAAOC,QAAQ,SAAf,oBACA,uBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAKvB,OAEtC,sBAAKP,UAAWC,IAAQyB,QAAxB,UACE,uBAAOC,QAAQ,OAAf,kBACA,0BAAUE,GAAG,OAAOE,KAAK,IAAID,IAAKrB,OAEpC,qBAAKT,UAAWC,IAAQ+B,QAAxB,SACE,wBAAQhC,UAAU,MAAMiC,QAtBJ,WAE7B,EAoBS,+BAQX,E,gBC3BcC,UAxBE,WACf,IAAMC,EAAWC,cACjB,EAAgCC,YAAQC,KAAhCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,OAErBC,qBAAU,WACO,cAAXD,GACFL,EAAS,UAEZ,GAAE,CAACK,EAAQL,IAMZ,OACE,mCACE,cAAC,EAAD,CACE9B,WAPkB,SAACqC,GACvBH,EAAYG,EACb,EAMKpC,UAAsB,YAAXkC,KAIlB,C","file":"static/js/6.713e4b1b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1m44e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__3Ndw9\",\"loading\":\"QuoteForm_loading__iDpS0\",\"control\":\"QuoteForm_control__2lCiE\",\"actions\":\"QuoteForm_actions__354La\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { useRef } from \"react\";\n\nimport Card from \"../UI/Card\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./QuoteForm.module.css\";\n\nconst QuoteForm = ({ onAddQuote, isLoading }) => {\n  // const [isEntering, setIsEntering] = useState(false);\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    onAddQuote({\n      author: enteredAuthor,\n      text: enteredText,\n      created_at: new Date().toISOString(),\n    });\n  }\n\n  const focusFormHandler = () => {\n    // setIsEntering(true);\n  };\n\n  const finishEnteringHandler = () => {\n    // setIsEntering(false);\n  };\n\n  return (\n    <>\n      <Card>\n        <form\n          className={classes.form}\n          onFocus={focusFormHandler}\n          onSubmit={submitFormHandler}\n        >\n          <LoadingSpinner isLoading={isLoading} className={classes.loading} />\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Author</label>\n            <input type=\"text\" id=\"author\" ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"text\">Text</label>\n            <textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button className=\"btn\" onClick={finishEnteringHandler}>\n              Add Quote\n            </button>\n          </div>\n        </form>\n      </Card>\n    </>\n  );\n};\n\nexport default QuoteForm;\n","import { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport QuoteForm from \"../components/quotes/QuoteForm\";\nimport useHttp from \"../hooks/use-http\";\nimport { addQuote } from \"../lib/api\";\n\nconst NewQuote = () => {\n  const navigate = useNavigate();\n  const { sendRequest, status } = useHttp(addQuote);\n\n  useEffect(() => {\n    if (status === \"completed\") {\n      navigate(\"/quotes\");\n    }\n  }, [status, navigate]);\n\n  const addQuoteHandler = (quote) => {\n    sendRequest(quote);\n  };\n\n  return (\n    <>\n      <QuoteForm\n        onAddQuote={addQuoteHandler}\n        isLoading={status === \"pending\"}\n      />\n    </>\n  );\n};\n\nexport default NewQuote;\n"],"sourceRoot":""}