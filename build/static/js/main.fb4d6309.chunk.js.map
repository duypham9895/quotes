{"version":3,"sources":["components/layout/MainNavigation.module.css","components/UI/LoadingSpinner.js","hooks/use-http.js","lib/api.js","components/comments/NewCommentForm.module.css","components/comments/Comments.module.css","components/UI/LoadingSpinner.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/layout/Layout.module.css","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/NewCommentForm.js","components/comments/Comments.js","components/layout/MainNavigation.js","components/layout/Layout.js","App.js","index.js"],"names":["module","exports","LoadingSpinner","isLoading","className","classes","spinner","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","transformedQuotes","Object","entries","map","key","value","id","getSingleQuote","quoteId","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","CommentItem","text","item","CommentsList","comments","isEmptyComments","isEmpty","NewCommentForm","refreshComments","commentTextRef","useRef","useEffect","form","onSubmit","event","preventDefault","comment","current","control","htmlFor","rows","ref","actions","Comments","useParams","useState","isAddingComment","setIsAddingComment","refreshCommentsHandler","onClick","MainNavigation","header","logo","nav","to","isActive","active","Layout","children","main","AllQuotes","React","lazy","NewQuote","NotFound","QuoteDetail","App","fallback","path","element","replace","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.fb4d6309.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__pcWBd\",\"logo\":\"MainNavigation_logo__3mTft\",\"nav\":\"MainNavigation_nav__2KJfX\",\"active\":\"MainNavigation_active__oN3Ka\"};","import classes from \"./LoadingSpinner.module.css\";\n\nconst LoadingSpinner = ({ isLoading, className = \"\" }) => {\n  if (!isLoading) {\n    return;\n  }\n  return (\n    <div className=\"centered\">\n      <div className={`${className} ${classes.spinner}`}></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import { useReducer, useCallback } from \"react\";\n\nfunction httpReducer(state, action) {\n  switch (action.type) {\n    case \"SEND\": {\n      return {\n        data: null,\n        error: null,\n        status: \"pending\",\n      };\n    }\n    case \"SUCCESS\": {\n      return {\n        data: action.responseData,\n        error: null,\n        status: \"completed\",\n      };\n    }\n    case \"ERROR\": {\n      return {\n        data: null,\n        error: action.errorMessage,\n        status: \"completed\",\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? \"pending\" : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: \"SEND\" });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: \"SUCCESS\", responseData });\n      } catch (error) {\n        dispatch({\n          type: \"ERROR\",\n          errorMessage: error.message || \"Something went wrong!\",\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","const FIREBASE_DOMAIN =\n  \"https://react-complete-guilde-default-rtdb.asia-southeast1.firebasedatabase.app\";\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not fetch quotes.\");\n  }\n\n  const transformedQuotes = Object.entries(data).map(([key, value]) => ({\n    ...value,\n    id: key,\n  }));\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not fetch quote.\");\n  }\n\n  if (!data) {\n    return null;\n  }\n\n  return {\n    id: quoteId,\n    ...data,\n  };\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: \"POST\",\n    body: JSON.stringify(quoteData),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not create quote.\");\n  }\n\n  return null;\n}\n\nexport async function addComment({ commentData, quoteId }) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`, {\n    method: \"POST\",\n    body: JSON.stringify(commentData),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not add comment.\");\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not get comments.\");\n  }\n\n  if (!data) {\n    return [];\n  }\n\n  const transformedComments = Object.entries(data).map(([key, value]) => ({\n    id: key,\n    ...value,\n  }));\n\n  return transformedComments;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__2Te8b\",\"loading\":\"NewCommentForm_loading__2veC2\",\"control\":\"NewCommentForm_control__3NVeP\",\"actions\":\"NewCommentForm_actions__2fwWP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__iZX-v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__2Kyqv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__24mbD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__valp0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__auk_r\"};","import classes from \"./CommentItem.module.css\";\n\nconst CommentItem = ({ text }) => {\n  return (\n    <li className={classes.item}>\n      <p>{text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import isEmpty from \"lodash/isEmpty\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\n\nimport CommentItem from \"./CommentItem\";\nimport classes from \"./CommentsList.module.css\";\n\nconst CommentsList = ({ comments = [], status, error }) => {\n  const isLoading = status === \"pending\";\n  const isEmptyComments = status === \"completed\" && isEmpty(comments);\n\n  if (isLoading) {\n    return <LoadingSpinner isLoading={isLoading} />;\n  }\n\n  if (error) {\n    <p className=\"centered focused\">{error}</p>;\n  }\n\n  if (isEmptyComments) {\n    return <p className=\"centered\">Not found comments yet!</p>;\n  }\n\n  return (\n    <ul className={classes.comments}>\n      {comments.map(({ id, text }) => (\n        <CommentItem key={id} text={text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useEffect, useRef } from \"react\";\n\nimport useHttp from \"../../hooks/use-http\";\nimport { addComment } from \"../../lib/api\";\n\nimport classes from \"./NewCommentForm.module.css\";\n\nconst NewCommentForm = ({ quoteId, refreshComments }) => {\n  const commentTextRef = useRef();\n  const { sendRequest, status, error } = useHttp(addComment);\n\n  useEffect(() => {\n    if (status === \"completed\" && !error) {\n      refreshComments();\n    }\n  }, [status, error, refreshComments]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    const comment = commentTextRef.current.value;\n    sendRequest({ commentData: { text: comment }, quoteId });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      <div className={classes.control}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import { useCallback, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport classes from \"./Comments.module.css\";\nimport CommentsList from \"./CommentsList\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport useHttp from \"../../hooks/use-http\";\nimport { getAllComments } from \"../../lib/api\";\n\nconst Comments = () => {\n  const { quoteId } = useParams();\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const {\n    sendRequest,\n    data: comments,\n    status,\n    error,\n  } = useHttp(getAllComments, true);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const refreshCommentsHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          quoteId={quoteId}\n          refreshComments={refreshCommentsHandler}\n        />\n      )}\n      <CommentsList comments={comments} status={status} error={error} />\n    </section>\n  );\n};\n\nexport default Comments;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport classes from \"./MainNavigation.module.css\";\n\nconst MainNavigation = () => {\n  return (\n    <header className={classes.header}>\n      <div className={classes.logo}>Great Quotes</div>\n      <nav className={classes.nav}>\n        <ul>\n          <li>\n            <NavLink\n              to=\"/quotes\"\n              className={({ isActive }) => (isActive ? classes.active : \"\")}\n            >\n              Quotes\n            </NavLink>\n          </li>\n          <li>\n            <NavLink\n              to=\"/new-quote\"\n              className={({ isActive }) => (isActive ? classes.active : \"\")}\n            >\n              Add a Quote\n            </NavLink>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainNavigation;\n","import React from \"react\";\n\nimport classes from \"./Layout.module.css\";\nimport MainNavigation from \"./MainNavigation\";\n\nconst Layout = ({ children }) => {\n  return (\n    <>\n      <MainNavigation />\n      <main className={classes.main}>{children}</main>\n    </>\n  );\n};\n\nexport default Layout;\n","import React, { Suspense } from \"react\";\nimport { Navigate, Route, Routes } from \"react-router-dom\";\nimport Comments from \"./components/comments/Comments\";\n\nimport Layout from \"./components/layout/Layout\";\nimport LoadingSpinner from \"./components/UI/LoadingSpinner\";\n\nconst AllQuotes = React.lazy(() => import(\"./pages/AllQuotes\"));\nconst NewQuote = React.lazy(() => import(\"./pages/NewQuote\"));\nconst NotFound = React.lazy(() => import(\"./pages/NotFound\"));\nconst QuoteDetail = React.lazy(() => import(\"./pages/QuoteDetail\"));\n\nconst App = () => {\n  return (\n    <Layout>\n      <Suspense fallback={<LoadingSpinner isLoading={true} />}>\n        <Routes>\n          <Route path=\"/\" element={<Navigate to=\"/quotes\" replace />} />\n          <Route path=\"/quotes\" element={<AllQuotes />} />\n          <Route path=\"/quotes/:quoteId/*\" element={<QuoteDetail />}>\n            <Route path=\"comments\" element={<Comments />} />\n          </Route>\n          <Route path=\"/new-quote\" element={<NewQuote />} />\n          <Route path=\"*\" element={<NotFound />} />\n        </Routes>\n      </Suspense>\n    </Layout>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>\n);\n"],"sourceRoot":""}